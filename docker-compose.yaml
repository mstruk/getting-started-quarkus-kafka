version: '2'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:15.0.2
    container_name: keycloak
    ports:
      - 8080:8080
      - 8443:8443
    volumes:
      - ./compose/certificates:/opt/jboss/keycloak/standalone/configuration/certs
      - ./compose/keycloak/scripts:/opt/jboss/keycloak/ssl
      - ./compose/keycloak/realms:/opt/jboss/keycloak/realms

    entrypoint: ""

    command:
      - /bin/bash
      - -c
      - cd /opt/jboss/keycloak && bin/jboss-cli.sh --file=ssl/keycloak-ssl.cli && rm -rf standalone/configuration/standalone_xml_history/current && cd .. && /opt/jboss/tools/docker-entrypoint.sh  -Dkeycloak.profile.feature.upload_scripts=enabled -b 0.0.0.0

    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_HTTPS_PORT=8443
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_IMPORT=/opt/jboss/keycloak/realms/kafka-authz-realm.json

  zookeeper:
    image: quay.io/strimzi/kafka:0.25.0-kafka-2.8.0
    container_name: zookeeper
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: quay.io/strimzi/kafka:0.25.0-kafka-2.8.0
    container_name: kafka
    volumes:
      - ./compose/kafka/config:/opt/kafka/config/strimzi
      - ./compose/kafka/scripts:/opt/kafka/strimzi
    command:
      - /bin/bash
      - -c
      - cd /opt/kafka/strimzi && ./start.sh
    depends_on:
      - zookeeper
      - keycloak
    ports:
      - "9092:9092"
    environment:
      - LOG_DIR=/tmp/logs
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=JWT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=JWT:SASL_PLAINTEXT
      - KAFKA_SASL_ENABLED_MECHANISMS=OAUTHBEARER
      - KAFKA_INTER_BROKER_LISTENER_NAME=JWT
      - KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL=OAUTHBEARER

      - OAUTH_USERNAME_CLAIM=preferred_username
      - KAFKA_PRINCIPAL_BUILDER_CLASS=io.strimzi.kafka.oauth.server.OAuthKafkaPrincipalBuilder
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

      - KAFKA_LISTENER_NAME_JWT_SASL_ENABLED_MECHANISMS=OAUTHBEARER,PLAIN
      - KAFKA_LISTENER_NAME_JWT_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.jwks.endpoint.uri=\"http://keycloak:8080/auth/realms/kafka-authz/protocol/openid-connect/certs\"    oauth.valid.issuer.uri=\"http://keycloak:8080/auth/realms/kafka-authz\"    oauth.token.endpoint.uri=\"http://keycloak:8080/auth/realms/kafka-authz/protocol/openid-connect/token\"    oauth.client.id=\"kafka\"    oauth.client.secret=\"kafka-secret\" ;
      - KAFKA_LISTENER_NAME_JWT_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler
      - KAFKA_LISTENER_NAME_JWT_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

      - KAFKA_LISTENER_NAME_JWT_PLAIN_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required    oauth.token.endpoint.uri=\"http://keycloak:8080/auth/realms/kafka-authz/protocol/openid-connect/token\"    oauth.client.id=\"kafka\"    oauth.client.secret=\"kafka-secret\"    oauth.jwks.endpoint.uri=\"http://keycloak:8080/auth/realms/kafka-authz/protocol/openid-connect/certs\"    oauth.valid.issuer.uri=\"http://keycloak:8080/auth/realms/kafka-authz\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_JWT_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.plain.JaasServerOauthOverPlainValidatorCallbackHandler

      # For start.sh script to know where the keycloak is listening
      - KEYCLOAK_HOST=${KEYCLOAK_HOST:-keycloak}
      - REALM=${REALM:-kafka-authz}
